how do users in linux work?
# different kind of users (main 3):
	> root user:
		- highest privileges
		- it has the user ID: 0
		- there can only be one root on the system
	> regular users:
		- limited privileges
		- we can allow regular users to temoprarily get toot access through sudo
	> service users:
		- for specific tasks
		- this allows us to safely run a webserver, database...
# groups:
	- all users have a primary group
	- can be assigned to zero to unlimited additional groups

managing users
# on linux, user information is stored in various files:
	> /etc/passwd
		- contains basic user account information
		- username, user ID (UID), group ID (GID), user description (full name),
		  home directory and default shell
		- readable by all users
	> /etc/shadow
		- stores encrypted user password and passwoord aging information
		- also stores additional information, such as the date of the
		  last password changes, expiry dates...
		- readable only by the root users (or users with root privileges)
	> /etc/group
		- contains information about the groups, and their members
		- readable by all users

=====================================

managing users: useradd
# to create new user
# syntax: useradd [option] username
# most important options:
	> -m: create home directory
	> -d set custom home directory
	> -s specify default shell
	> manage groups:
		>> -g: specify primary group of using the default configuration
			-- often, default configuration os that a new group will be
			   created with the same name as the username
		>> -G: add user to secodnary groups

# example:
	$ useradd -m -d /home/lauren lauren
	useradd: Permission denied.
	useradd: cannot lock /etc/passwd; try again later.
	$ sudo useradd -m -d /home/lauren lauren
	$ cat /etc/passwd
	...
	lauren:x:1002:1002::/home/lauren:/bin/sh
	$ cat etc/group
	...
	lauren:x:1002:
	$ sudo /etc/shadow
	...
	lauren:!:... (! = no password)
	ls /home/
	... lauren ...


managing users: passwd
# can set the password of users
# syntax: passwd [option] [username]
# most important options:
	> -S: display password status
	> -d: delete password
	> -n: set minimum password age (days)
	> -x: set maximum password age (days)
# can also use it to lock / unlock the account:
	> -l: lock user account
	> -u: unlock user account

# example:
	$ passwd -S
	[username] P 2025-01-24 0 99999 7 -1
	(
		[username]: username
		P: regular password
		2025-01-24: the date when have been changed
		0: 0 days since changed the password
		99999: number of days until password expires
		7: this means that I will warned 7 days before it expires
		-1: iy my password expires, I can still log in
	)
	$ sudo passwd -S lauren
	lauren L 2025-01-24 0 99999 7 -1 
	(L: password is loged)
	$ sudo passwd lauren
	New password:
	... (some information of the password stenght) ...
	Retype new password:
	passwd: pawwsord updated successfully
	-----
	log in with lauren
	-----
	$ passwd
	Changeing password for lauren.
	Current password:
	New password:
	... (some information of the password stenght) ...
	New password:
	Password change has been aborted.
	passwd: Authentication token manipulation error
	passwd: password unchanged

=====================================

password expiration?
$ sudo passwd -n 7 -x 30 lauren // should be forced to change its password every 30 days

=====================================

changing users: usermod
# can modify another user's details
# syntax: usermod [options] username
# important options:
	> -c: change user description (full name)
	> -s: change default shell
	> should really consider if we want to use those options:
		>> -d: change direction (-m to also move the existing home directory
			to the new location)
		>> -l: change username
	> manage groups:
		>> -g: change primary group
		>> -G: change secondary groups
		>> -aG: add secondary group

#example:
	$ sudo usermod -s /bin/bash -c 'Lauren M.' lauren

=====================================













