touch and mkdir commands

touch - create one or multiple files
    example: touch aron.txt laszlo.txt
    - to modify the timestamp of file
    - if the files already exists, only its timestap will be modified
    - otherwise, a new file is created
    - to chaeck timestaps use this command: ls -l

mkdir - create a new directory

============================================

mv and cp commands

mv
    - move an existing file to another location:: mv [file_name] [path/directory_name/]
    - can also be used to rename an existing file: mv [file_name] [new_file_name]
    - can als be used to rename the file and change its location: mv [file_name] [directory_name/new_file_name]

cp
    - copy a file: cp [file_name] [new_file_name]
    - we can copy and rename at the same time: cp [file_name] [directory_name/new_file_name]
    - copy file into a folder: cp [file_name] [directory_name]
    - create a backup or a copy of current folder: cp -R [directory_name] [directory_name_backup]

============================================

how to delete files?
rm (remove)
    - to remove files: rm [file_name] [other_file_name] ...
    - for deleteing directory -r flag is needed
    - also work for empty and none empty folders
    important: its dangerous! the files and folders will be removed forever!

rmdir (remove directory)
    - only delete empty directories
    - safer than rm -r command

============================================

filename expansion (globbing)
    - bash can rewrite our command before it is being executed
    - globing recognizes and epands pre-defined wildcard characters
    - it will then reserch for files thet match this pattern and expand (rewrite) or command
    - allows to eccess multiple files
    - wildcard character: *
        # matches 0 to any number o characters
        # example:  mv *.jpg imgs/  <== every file with .jpg ending move to "imgs" folder
                    mv *.* [directory_name]  <== every file move to [directory_name]
        # if there is no such files return an error:
                    mv: cannot stat '*.jpg': No such file or directory
        other example: echo *.jpg   <== shows every file name which name is end with .jpg

Filename expansion:
    IMPORTANT:
        The wildcard character must not be quoted!!!
        other interesting thing:
            touch '*.JPG'  <== created a file which name is: *.JPG
                # to move (rename) that file: mv '*.JPG' [directory_name]
        Globbing does not use regular expressions!!!!
