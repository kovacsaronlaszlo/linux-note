echo
----
check which version of bash is used: echo "${BASH_VERSION}"

if we are not in bash, just wirte "bash" and hit enter

to output text in terminal:
echo 'text'
    - echo is the command
    - text is an argument(s)

to putput text in terminal without line break:
echo -n 'text'
    -  '-n' is an option

to enable backlash escapes
echo -e 'text\ntext'
    - without '-e' option the reulst looks like this:
        text\ntext, the \n wont be converted into a line break

can be combined more options:
echo -e -n 'text\ntext'
or:
echo -en 'text\ntext'
or change the order:
echo -ne 'text\ntext'

============================================
pwd & cd
--------
current directory:
pwd

change directory:
cd [directory_name]

navigate to root folder:
cd /

navigate ot home directory:
cd or cd ~

move into parent directory:
cd .. or cd ../..

============================================
ls
--
ls - content of the directoty

syntax of ls:
ls [options...] [path]

ls -a - list all entries including the hidden files

ls -r - reverse order while sorting

ls -t sort by modification time, newest first

ls -tr - the two option of abover (-t and -r)

ls --color - its a pattern
    => enables colorful output
    => --color={always,never,auto} => ls --color=never (no colors!!!!)
    => can use woth other options => ls -ta --color

advanced example with path:
ls -ta --color ~/Desktop

============================================
Path types: absolute vs realitve path

absolute path:
    - start with: /
    - define the complete path of file
    example: 
        # /home/karon/Desktop
        # ~/Dekstop

relative path:
    - are being resolved according to our current working directory
    example:
        # ./Desktop
        # Desktop
        # ../Desktop

============================================

executing multiply commands using ';'
[command1]; [command2] 
example: 
    - echo -n "Hello "; echo "World" => Hello World
    - cd ..; cd Desktop; ls => list files and folders in Desktop folder